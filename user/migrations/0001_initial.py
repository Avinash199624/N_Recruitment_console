# Generated by Django 3.1.7 on 2021-09-01 15:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import neeri_recruitment_portal.validators
import user.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('job_posting', '0001_initial'),
        ('document', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=30, null=True)),
                ('mobile_no', models.CharField(max_length=10, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[neeri_recruitment_portal.validators.EmailValidator()])),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', user.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FellowshipMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('entrance_examination', models.CharField(blank=True, choices=[('gate', 'GATE'), ('net', 'NET'), ('set', 'SET')], max_length=100, null=True)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('scoring_unit', models.CharField(blank=True, choices=[('%', '%'), ('class', 'class'), ('division', 'division')], max_length=50, null=True)),
                ('passing_year', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('address1', models.CharField(blank=True, max_length=200)),
                ('address2', models.CharField(blank=True, max_length=200, null=True)),
                ('address3', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('postcode', models.CharField(blank=True, max_length=20, null=True)),
                ('telephone_no', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MentorMaster',
            fields=[
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('mentor_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mentor_name', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NeeriRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('relation_name', models.CharField(blank=True, max_length=50, null=True)),
                ('designation', models.CharField(blank=True, max_length=50, null=True)),
                ('center_name', models.CharField(blank=True, max_length=50, null=True)),
                ('relation', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OtherInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('bond_title', models.CharField(blank=True, max_length=100, null=True)),
                ('bond_details', models.TextField(blank=True, null=True)),
                ('organisation_name', models.CharField(blank=True, max_length=200, null=True)),
                ('bond_start_date', models.DateField(blank=True, null=True)),
                ('bond_end_date', models.DateField(blank=True, null=True)),
                ('notice_period_min', models.IntegerField(blank=True, help_text='notice_period_min_in_days', null=True)),
                ('notice_period_max', models.IntegerField(blank=True, help_text='notice_period_max_in_days', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OverseasVisits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('country_visited', models.CharField(blank=True, choices=[('usa', 'USA'), ('uk', 'UK')], max_length=50, null=True)),
                ('date_of_visit', models.DateField(blank=True, null=True)),
                ('duration_of_visit', models.CharField(blank=True, max_length=50, null=True)),
                ('purpose_of_visit', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProfessionalTraining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublishedPapers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('paper_title', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelaxationCategoryMaster',
            fields=[
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('relaxation_cat_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('relaxation_category', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelaxationMaster',
            fields=[
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('relaxation_rule_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('age_relaxation', models.PositiveIntegerField(blank=True, null=True)),
                ('fee_relaxation', models.PositiveIntegerField(blank=True, null=True)),
                ('relaxation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relaxation', to='user.relaxationcategorymaster')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReligionMaster',
            fields=[
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('religion_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('religion_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserDocuments',
            fields=[
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('doc_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('doc_file_path', models.CharField(blank=True, help_text='path to document', max_length=200, null=True)),
                ('document_master', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='document.newdocumentmaster')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserEducationDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('exam_name', models.CharField(blank=True, max_length=50, null=True)),
                ('university', models.CharField(blank=True, help_text='university', max_length=50, null=True)),
                ('college_name', models.CharField(blank=True, max_length=50, null=True)),
                ('passing_year', models.CharField(blank=True, max_length=50, null=True)),
                ('score', models.CharField(blank=True, help_text='score', max_length=50, null=True)),
                ('score_unit', models.CharField(blank=True, choices=[('%', '%'), ('class', 'class'), ('division', 'division')], max_length=30, null=True)),
                ('specialization', models.CharField(blank=True, help_text='special subject', max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserExperienceDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('employer_name', models.CharField(blank=True, max_length=50, null=True)),
                ('post', models.CharField(blank=True, max_length=30, null=True)),
                ('employed_from', models.DateField(blank=True, null=True)),
                ('employed_to', models.DateField(blank=True, null=True)),
                ('employment_type', models.CharField(blank=True, choices=[('permanent', 'PERMANENT'), ('temporary', 'TEMPORARY')], max_length=30, null=True)),
                ('salary', models.IntegerField(blank=True, null=True)),
                ('grade', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserLanguages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('read_level', models.CharField(blank=True, choices=[('beginner', 'BEGINNER'), ('intermediate', 'INTERMEDIATE'), ('expert', 'EXPERT')], max_length=20, null=True)),
                ('write_level', models.CharField(blank=True, choices=[('beginner', 'BEGINNER'), ('intermediate', 'INTERMEDIATE'), ('expert', 'EXPERT')], max_length=20, null=True)),
                ('speak_level', models.CharField(blank=True, choices=[('beginner', 'BEGINNER'), ('intermediate', 'INTERMEDIATE'), ('expert', 'EXPERT')], max_length=20, null=True)),
                ('exam_passed', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('reference_name', models.CharField(blank=True, max_length=50, null=True)),
                ('position', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='referee_address', to='user.location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('others', 'Others')], max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('not_decided', 'Not Decided'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('on_hold', 'On Hold'), ('other', 'Other')], default='not_decided', max_length=20, null=True)),
                ('is_permenant_address_same_as_local', models.BooleanField(default=False)),
                ('is_father_address_same_as_local', models.BooleanField(default=False)),
                ('date_of_birth_in_words', models.CharField(blank=True, max_length=50, null=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=30, null=True)),
                ('father_name', models.CharField(blank=True, max_length=50, null=True)),
                ('father_occupation', models.CharField(blank=True, max_length=30, null=True)),
                ('caste', models.CharField(blank=True, choices=[('sc', 'SC'), ('st', 'ST'), ('obc', 'OBC'), ('gen', 'GEN'), ('pwd', 'PWD')], max_length=30, null=True)),
                ('passport_number', models.CharField(blank=True, max_length=8, null=True)),
                ('passport_expiry', models.DateField(blank=True, null=True)),
                ('profile_photo', models.CharField(blank=True, max_length=200, null=True)),
                ('fax_number', models.CharField(blank=True, max_length=20, null=True)),
                ('is_indian_citizen', models.BooleanField(blank=True, default=True, null=True)),
                ('whatsapp_id', models.CharField(blank=True, max_length=50, null=True)),
                ('skype_id', models.CharField(blank=True, max_length=50, null=True)),
                ('is_fresher', models.BooleanField(blank=True, default=False, null=True)),
                ('documents', models.ManyToManyField(blank=True, null=True, related_name='documents', to='user.UserDocuments')),
                ('education_details', models.ManyToManyField(blank=True, null=True, related_name='education_details', to='user.UserEducationDetails')),
                ('experiences', models.ManyToManyField(blank=True, null=True, related_name='experiences', to='user.UserExperienceDetails')),
                ('father_address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='father_address', to='user.location')),
                ('fellow_ships', models.ManyToManyField(blank=True, null=True, related_name='fellow_ships', to='user.FellowshipMaster')),
                ('languages', models.ManyToManyField(blank=True, null=True, related_name='languages', to='user.UserLanguages')),
                ('local_address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='local_address', to='user.location')),
                ('neeri_relation', models.ManyToManyField(blank=True, related_name='neeri_relations', to='user.NeeriRelation')),
                ('other_info', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='other_info', to='user.otherinformation')),
                ('overseas_visits', models.ManyToManyField(blank=True, null=True, related_name='overseas_visits', to='user.OverseasVisits')),
                ('permanent_address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='permanent_address', to='user.location')),
                ('professional_trainings', models.ManyToManyField(blank=True, null=True, related_name='professional_tarinings', to='user.ProfessionalTraining')),
                ('published_papers', models.ManyToManyField(blank=True, null=True, related_name='published_papers', to='user.PublishedPapers')),
                ('references', models.ManyToManyField(blank=True, null=True, related_name='references', to='user.UserReference')),
                ('relaxation_rule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='m_relaxation_rules', to='user.relaxationmaster')),
                ('religion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_religion', to='user.religionmaster')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserAuthentication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_verified', models.BooleanField(default=False)),
                ('mobile_verified', models.BooleanField(default=False)),
                ('email_token', models.CharField(blank=True, max_length=200, null=True)),
                ('sms_token', models.CharField(blank=True, max_length=200, null=True)),
                ('reset_token', models.CharField(blank=True, max_length=200, null=True)),
                ('mobile_otp', models.IntegerField(blank=True, null=True)),
                ('email_otp_expiry', models.DateTimeField(blank=True, null=True)),
                ('mobile_otp_expiry', models.DateTimeField(blank=True, null=True)),
                ('reset_otp_expiry', models.DateTimeField(blank=True, null=True)),
                ('account_lock_expiry', models.DateTimeField(blank=True, null=True)),
                ('is_first_login', models.BooleanField(blank=True, default=True, null=True)),
                ('is_suspended', models.BooleanField(blank=True, default=False, null=True)),
                ('is_locked', models.BooleanField(blank=True, default=False, null=True)),
                ('wrong_login_attempt', models.IntegerField(blank=True, default=0, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_auth', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Trainee',
            fields=[
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('trainee_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('generated_trainee_id', models.CharField(blank=True, default=None, max_length=16, null=True, unique=True)),
                ('trainee_name', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[neeri_recruitment_portal.validators.EmailValidator()])),
                ('mobile_no', models.CharField(max_length=10, null=True, unique=True)),
                ('emp_start_date', models.DateField(blank=True, null=True)),
                ('emp_end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('not_decided', 'NOT_DECIDED'), ('active', 'ACTIVE'), ('completed', 'COMPLETED'), ('yet to join', 'YET_TO_JOIN')], default='not_decided', max_length=20, null=True)),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='division_trainee', to='job_posting.division')),
                ('mentor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mentor', to='user.mentormaster')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('expired', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='publishedpapers',
            name='attachments',
            field=models.ManyToManyField(blank=True, related_name='attachments', to='user.UserDocuments'),
        ),
        migrations.CreateModel(
            name='NeeriUserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('others', 'Others')], max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('religion', models.CharField(blank=True, max_length=30, null=True)),
                ('caste', models.CharField(blank=True, choices=[('sc', 'SC'), ('st', 'ST'), ('obc', 'OBC'), ('gen', 'GEN'), ('pwd', 'PWD')], max_length=30, null=True)),
                ('profile_photo', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='neeri_user_address', to='user.location')),
                ('division', models.ManyToManyField(blank=True, related_name='neeri_user_division', to='job_posting.Division')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='neeri_user_profile', to=settings.AUTH_USER_MODEL)),
                ('zonal', models.ManyToManyField(blank=True, related_name='neeri_user_zonal', to='job_posting.ZonalLab')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
