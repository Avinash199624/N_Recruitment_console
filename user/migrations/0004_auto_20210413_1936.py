# Generated by Django 3.1.7 on 2021-04-13 19:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('document', '0003_auto_20210413_1936'),
        ('user', '0003_permissionmaster_rolemaster_userpermissions_userroles'),
    ]

    operations = [
        migrations.CreateModel(
            name='NeeriRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('designation', models.CharField(blank=True, max_length=50, null=True)),
                ('working_location', models.CharField(blank=True, max_length=50, null=True)),
                ('relation', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OtherInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('bond_details', models.CharField(blank=True, max_length=100, null=True)),
                ('notice_period_min', models.CharField(blank=True, max_length=30, null=True)),
                ('notice_period_max', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OverseasVisits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('country_visited', models.CharField(blank=True, choices=[('usa', 'USA'), ('uk', 'UK')], max_length=50, null=True)),
                ('date_of_visit', models.DateField(blank=True, null=True)),
                ('duration_of_visit', models.DateField()),
                ('purpose_of_visit', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserDocuments',
            fields=[
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('doc_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('doc_file_path', models.CharField(blank=True, help_text='path to document', max_length=50, null=True)),
                ('doc_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserEducationDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('exam_name', models.CharField(blank=True, max_length=50, null=True)),
                ('university', models.CharField(blank=True, help_text='university', max_length=50, null=True)),
                ('college_name', models.CharField(blank=True, max_length=50, null=True)),
                ('passing_year', models.CharField(blank=True, max_length=50, null=True)),
                ('score', models.CharField(blank=True, help_text='score', max_length=50, null=True)),
                ('score_unit', models.CharField(blank=True, choices=[('%', '%'), ('class', 'class'), ('division', 'division')], max_length=30, null=True)),
                ('specialization', models.CharField(blank=True, help_text='special subject', max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserLanguages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('read_level', models.CharField(blank=True, choices=[('beginner', 'BEGINNER'), ('intermediate', 'INTERMEDIATE'), ('expert', 'EXPERT')], max_length=20, null=True)),
                ('write_level', models.CharField(blank=True, choices=[('beginner', 'BEGINNER'), ('intermediate', 'INTERMEDIATE'), ('expert', 'EXPERT')], max_length=20, null=True)),
                ('speak_level', models.CharField(blank=True, choices=[('beginner', 'BEGINNER'), ('intermediate', 'INTERMEDIATE'), ('expert', 'EXPERT')], max_length=20, null=True)),
                ('exam_passed', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RenameField(
            model_name='user',
            old_name='id',
            new_name='user_id',
        ),
        migrations.RenameField(
            model_name='userpermissions',
            old_name='role_name',
            new_name='role',
        ),
        migrations.RenameField(
            model_name='userprofile',
            old_name='higher_qualification',
            new_name='date_of_birth_in_words',
        ),
        migrations.RenameField(
            model_name='userprofile',
            old_name='phone_no',
            new_name='fax_number',
        ),
        migrations.RenameField(
            model_name='userprofile',
            old_name='age',
            new_name='passport_number',
        ),
        migrations.AddField(
            model_name='location',
            name='telephone_no',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='permissionmaster',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Used for Soft Delete'),
        ),
        migrations.AddField(
            model_name='rolemaster',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Used for Soft Delete'),
        ),
        migrations.AddField(
            model_name='userpermissions',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Used for Soft Delete'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='caste',
            field=models.CharField(blank=True, choices=[('sc', 'SC'), ('st', 'ST'), ('obc', 'OBC'), ('gen', 'GEN'), ('pwd', 'PWD')], max_length=30, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='father_address',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='father_address', to='user.location'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='father_name',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='father_occupation',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='is_indian_citizen',
            field=models.BooleanField(blank=True, default=True, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='passport_expiry',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='place_of_birth',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='profile_photo',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='religion',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='roles',
            field=models.ManyToManyField(blank=True, null=True, related_name='user_roles', to='user.RoleMaster'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='skype_id',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='whatsapp_id',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='userroles',
            name='is_deleted',
            field=models.BooleanField(default=False, help_text='Used for Soft Delete'),
        ),
        migrations.AlterField(
            model_name='location',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='location',
            name='created_by',
            field=models.CharField(blank=True, help_text='username', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='location',
            name='updated_by',
            field=models.CharField(blank=True, help_text='username', max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='permissionmaster',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='permissionmaster',
            name='created_by',
            field=models.CharField(blank=True, help_text='username', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='permissionmaster',
            name='updated_by',
            field=models.CharField(blank=True, help_text='username', max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='rolemaster',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='rolemaster',
            name='created_by',
            field=models.CharField(blank=True, help_text='username', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='rolemaster',
            name='updated_by',
            field=models.CharField(blank=True, help_text='username', max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='created_by',
            field=models.CharField(blank=True, help_text='username', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='middle_name',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='updated_by',
            field=models.CharField(blank=True, help_text='username', max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='userpermissions',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='userpermissions',
            name='created_by',
            field=models.CharField(blank=True, help_text='username', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='userpermissions',
            name='updated_by',
            field=models.CharField(blank=True, help_text='username', max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='created_by',
            field=models.CharField(blank=True, help_text='username', max_length=50, null=True),
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='local_address',
        ),
        migrations.AddField(
            model_name='userprofile',
            name='local_address',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='local_address', to='user.location'),
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='permanent_address',
        ),
        migrations.AddField(
            model_name='userprofile',
            name='permanent_address',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='permanent_address', to='user.location'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='updated_by',
            field=models.CharField(blank=True, help_text='username', max_length=25, null=True),
        ),
        migrations.AlterField(
            model_name='userroles',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='userroles',
            name='created_by',
            field=models.CharField(blank=True, help_text='username', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='userroles',
            name='updated_by',
            field=models.CharField(blank=True, help_text='username', max_length=25, null=True),
        ),
        migrations.CreateModel(
            name='UserReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('reference_name', models.CharField(blank=True, max_length=50, null=True)),
                ('position', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='referee_address', to='user.location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserExperienceDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('company', models.CharField(blank=True, max_length=50, null=True)),
                ('designation', models.CharField(blank=True, max_length=30, null=True)),
                ('experience_in_years', models.IntegerField(blank=True, null=True)),
                ('joining_date', models.DateField(blank=True, null=True)),
                ('leaving_date', models.DateField(blank=True, null=True)),
                ('employment_type', models.CharField(blank=True, choices=[('permanent', 'PERMANENT'), ('temporary', 'TEMPORARY')], max_length=30, null=True)),
                ('salary', models.IntegerField(blank=True, null=True)),
                ('grade', models.CharField(blank=True, max_length=30, null=True)),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_address', to='user.location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublishedPapers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('paper_title', models.CharField(blank=True, max_length=30, null=True)),
                ('attachments', models.ManyToManyField(blank=True, related_name='attachments', to='document.DocumentMaster')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NeeriUserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=20, null=True)),
                ('mobile_no', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('religion', models.CharField(blank=True, max_length=30, null=True)),
                ('caste', models.CharField(blank=True, choices=[('sc', 'SC'), ('st', 'ST'), ('obc', 'OBC'), ('gen', 'GEN'), ('pwd', 'PWD')], max_length=30, null=True)),
                ('profile_photo', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='neeri_user_address', to='user.location')),
                ('roles', models.ManyToManyField(blank=True, null=True, related_name='neeri_user_roles', to='user.RoleMaster')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='neeri_user_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='userprofile',
            name='documents',
            field=models.ManyToManyField(blank=True, null=True, related_name='documents', to='user.UserDocuments'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='education_details',
            field=models.ManyToManyField(blank=True, null=True, related_name='education_details', to='user.UserEducationDetails'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='experiences',
            field=models.ManyToManyField(blank=True, null=True, related_name='experiences', to='user.UserExperienceDetails'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='languages',
            field=models.ManyToManyField(blank=True, null=True, related_name='languages', to='user.UserLanguages'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='neeri_relation',
            field=models.ManyToManyField(blank=True, related_name='neeri_relations', to='user.NeeriRelation'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='overseas_visits',
            field=models.ManyToManyField(blank=True, null=True, related_name='overseas_visits', to='user.OverseasVisits'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='published_papers',
            field=models.ManyToManyField(blank=True, null=True, related_name='published_papers', to='user.PublishedPapers'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='references',
            field=models.ManyToManyField(blank=True, null=True, related_name='references', to='user.UserReference'),
        ),
    ]
