# Generated by Django 3.1.7 on 2021-04-17 19:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('document', '0003_auto_20210413_1936'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('dept_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dept_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('division_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('division_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobPosting',
            fields=[
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('job_posting_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('notification_id', models.CharField(blank=True, max_length=100, null=True)),
                ('notification_title', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=50, null=True)),
                ('project_number', models.CharField(blank=True, max_length=50, null=True)),
                ('publication_date', models.DateTimeField(blank=True, help_text='start date of job notification', null=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='end date of job notification', null=True)),
                ('status', models.CharField(blank=True, choices=[('draft', 'Draft'), ('ready_to_be_published', 'Accepted'), ('published', 'Published'), ('suspended', 'Suspended'), ('cancelled', 'Other'), ('closed', 'Closed')], max_length=30, null=True)),
                ('job_type', models.CharField(blank=True, choices=[('Contract_Basis', 'contract_basis'), ('Permanent', 'permanent')], max_length=30, null=True)),
                ('department', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='department', to='job_posting.department')),
                ('division', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='division', to='job_posting.division')),
                ('documents_required', models.ManyToManyField(blank=True, related_name='required_documents', to='document.DocumentMaster')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PositionMaster',
            fields=[
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('position_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position_name', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PositionQualificationMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('min_age', models.IntegerField(blank=True, null=True)),
                ('max_age', models.IntegerField(blank=True, null=True)),
                ('number_of_vacancies', models.IntegerField(blank=True, help_text='total number of vacancies for post', null=True)),
                ('monthly_emolements', models.CharField(blank=True, max_length=80, null=True)),
                ('allowance', models.CharField(blank=True, choices=[('hra', 'HRA'), ('consolidated', 'CONSOLIDATED')], max_length=30, null=True)),
                ('extra_note', models.TextField(blank=True, null=True)),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='postion', to='job_posting.positionmaster')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QualificationMaster',
            fields=[
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('qualification_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('qualification_name', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ZonalLab',
            fields=[
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('zonal_lab_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('zonal_lab_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserJobPositions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('applied_job_status', models.CharField(blank=True, choices=[('received', 'RECEIVED'), ('accepted', 'ACCEPTED'), ('rejected', 'REJECTED'), ('shortlisted', 'SHORTLISTED'), ('offered', 'OFFERED'), ('hired', 'HIRED'), ('interview', 'INTERVIEW'), ('awaiting review', 'AWAITING_REVIEW'), ('closed', 'CLOSED')], max_length=50, null=True)),
                ('appealed', models.BooleanField(blank=True, default=False, null=True)),
                ('reason_to_appeal', models.TextField(blank=True, null=True)),
                ('date_of_application', models.DateField(auto_now_add=True)),
                ('date_of_closing', models.DateField(blank=True, help_text='Closing date of JobPosting', null=True)),
                ('job_posting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='job_posting', to='job_posting.jobposting')),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='job_position', to='job_posting.positionqualificationmapping')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='positionqualificationmapping',
            name='qualification',
            field=models.ManyToManyField(blank=True, related_name='qualification', to='job_posting.QualificationMaster'),
        ),
        migrations.CreateModel(
            name='JobTemplate',
            fields=[
                ('created_by', models.CharField(blank=True, help_text='username', max_length=50, null=True)),
                ('updated_by', models.CharField(blank=True, help_text='username', max_length=25, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Used for Soft Delete')),
                ('template_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('template_name', models.CharField(blank=True, max_length=50, null=True)),
                ('min_age', models.IntegerField(blank=True, null=True)),
                ('max_age', models.IntegerField(blank=True, null=True)),
                ('number_of_vacancies', models.IntegerField(blank=True, help_text='total number of vacancies for post', null=True)),
                ('monthly_emolements', models.CharField(blank=True, max_length=80, null=True)),
                ('allowance', models.CharField(blank=True, choices=[('hra', 'HRA'), ('consolidated', 'CONSOLIDATED')], max_length=30, null=True)),
                ('extra_note', models.TextField(blank=True, null=True)),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='job_postion', to='job_posting.positionmaster')),
                ('qualification', models.ManyToManyField(blank=True, related_name='job_qualification', to='job_posting.QualificationMaster')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='jobposting',
            name='manpower_positions',
            field=models.ManyToManyField(blank=True, related_name='job_positions', to='job_posting.PositionQualificationMapping'),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='zonal_lab',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='zonal_lab', to='job_posting.zonallab'),
        ),
    ]
